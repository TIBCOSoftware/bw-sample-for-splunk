info:
  title: SplunkConnector_Inputs
  version: "1.0"
  x-lastModified: Aug 26, 2016 17:00PM PST
paths:
  /services/collector:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - default: ""
        description: Required if useAck is enabled. Pass in the channel GUID as a
          string parameter or using the "x-splunk-request-channel" header.
        format: ""
        in: formData
        name: channel
        required: false
        type: string
      - default: ""
        description: |-
          Required. Event payload key-value. Value can be a string or a JSON object.
          JSON example: {"event": {"message":"Access log test message"}}
          String example: "event": "Access log test message."
        format: ""
        in: formData
        name: event
        required: false
        type: string
      - default: ""
        description: Host name. Specify with the host query string parameter. Sets
          a default for all events in the request. The default host name can be overridden.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: ""
        description: Index name. Specify with the index query string parameter. Sets
          a default for all events in the request. The default index name can be overridden.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: User-defined event source. Specify with the source query string
          parameter. Sets a default for all events in the request. The default source
          can be overridden.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: User-defined event sourcetype. Specify with the sourcetype query
          string parameter. Sets a default for all events in the request. The default
          sourcetype can be overridden.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      - default: ""
        description: Epoch-formatted time. Specify with the time query string parameter.
          Sets a default for all events in the request. The default time can be overridden.
        format: ""
        in: formData
        name: time
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/collector/ack:
    get:
      description: Get HTTP Event Collector event indexing status.
      parameters:
      - description: Required. Pass in the channel GUID as the channel string parameter
          or using the x-splunk-request-channel header.
        format: ""
        in: query
        name: channel
        required: true
        type: string
      - default: ""
        description: Required. JSON object with an array of ack ID values. Include
          in the request payload.
        format: ""
        in: query
        name: acks
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/ad:
    get:
      description: Gets current active directory monitoring configuration.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering.\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type.\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates new or modifies existing performance monitoring settings.
      parameters:
      - default: false
        description: |-
          Indicates whether to query baseline objects. Defaults to true.
          Baseline objects are objects which currently reside in Active Directory and include previously deleted objects.
        format: ""
        in: formData
        name: baseline
        required: false
        type: boolean
      - default: Docs-W8R2-Std7
        description: Host name for the Active Directory Monitor.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: |-
          The index in which to store the gathered data.
          If not specified defaults to the default index.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: 0
        description: Whether or not to monitor the subtree(s) of a given directory
          tree path. 1 means yes, 0 means no.
        format: int32
        in: formData
        name: monitorSubtree
        required: true
        type: integer
      - default: ""
        description: A unique name that represents a configuration or set of configurations
          for a specific domain controller.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: false
        description: Indicates whether to print the Active Directory schema. Defaults
          to true.
        format: ""
        in: formData
        name: printSchema
        required: false
        type: boolean
      - default: ""
        description: Source for data inputs.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: Source type of data inputs.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      - default: ""
        description: Where in the Active Directory directory tree to start monitoring.
          If not specified, attempts to start at the root of the directory tree.
        format: ""
        in: formData
        name: startingnode
        required: false
        type: string
      - default: ""
        description: Specifies a fully qualified domain name of a valid, network-accessible
          domain controller. If not specified, Splunk Enterprise gets the local domain
          controller.
        format: ""
        in: formData
        name: targetDc
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/ad/{name}:
    delete:
      description: Deletes a given active directory monitoring stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Gets the current configuration for a given active directory monitoring
        stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Modifies a given active directory monitoring stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: |-
          Indicates whether to query baseline objects. Defaults to true.
          Baseline objects are objects which currently reside in Active Directory and include previously deleted objects.
        format: ""
        in: formData
        name: baseline
        required: false
        type: boolean
      - default: Docs-W8R2-Std7
        description: Host name for the Active Directory Monitor.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: |-
          The index in which to store the gathered data.
          If not specified defaults to the default index.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: 0
        description: Whether or not to monitor the subtree(s) of a given directory
          tree path. 1 means yes, 0 means no.
        format: int32
        in: formData
        name: monitorSubtree
        required: true
        type: integer
      - default: false
        description: Indicates whether to print the Active Directory schema. Defaults
          to true.
        format: ""
        in: formData
        name: printSchema
        required: false
        type: boolean
      - default: ""
        description: Source for data inputs.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: Source type of data inputs.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      - description: Where in the Active Directory directory tree to start monitoring.
          If not specified, attempts to start at the root of the directory tree.
        format: ""
        in: formData
        name: startingNode
        required: false
        type: string
      - default: ""
        description: Specifies a fully qualified domain name of a valid, network-accessible
          DC. If not specified, Splunk Enterprise gets the local computer's DC.
        format: ""
        in: formData
        name: targetDc
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/all:
    get:
      description: Lists all inputs, including modular inputs.
      parameters:
      - default: false
        description: |-
          Indicates whether to return only attributes commom to all inputs. These common attributes are:
          app
          disabled
          host
          index
          owner
          source
          sourcetype
          title
          updated
        format: ""
        in: query
        name: common
        required: false
        type: boolean
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/all/{name}:
    get:
      description: Lists details for inputs for the input source specified by {name}.
      parameters:
      - default: false
        description: |-
          Indicates whether to return only attributes commom to all inputs. These common attributes are:
          app
          disabled
          host
          index
          owner
          source
          sourcetype
          title
          updated
        format: ""
        in: query
        name: common
        required: false
        type: boolean
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/http:
    get:
      description: Return global configuration and a list of tokens.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Modify global configuration, add and modify tokens.
      parameters:
      - default: 2
        description: Number of threads used by HTTP Input server.
        format: int32
        in: formData
        name: dedicatedIoThreads
        required: false
        type: integer
      - default: false
        description: 'Input disabled indicator: 0 = Input Not disabled, 1 = Input
          disabled.'
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: false
        description: Enable SSL protocol for HTTP data input. 1 = SSL enabled, 0 =
          SSL disabled.
        format: ""
        in: formData
        name: enableSSL
        required: false
        type: boolean
      - default: ""
        description: Index to store generated events.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - description: Set of indexes allowed for events with this token.
        format: ""
        in: formData
        name: indexes
        required: false
        type: string
      - default: 0
        description: Maximum number of simultaneous HTTP connections accepted. Adjusting
          this value may cause server performance issues and is not generally recommended.
          Possible values for this setting vary by OS.
        format: int32
        in: formData
        name: maxSockets
        required: false
        type: integer
      - default: "0"
        description: Maximum number of threads that can be used by active HTTP transactions.
          Adjusting this value may cause server performance issues and is not generally
          recommended. Possible values for this setting vary by OS.
        format: ""
        in: formData
        name: maxThreads
        required: false
        type: string
      - default: ""
        description: Token name (inputs.conf key)
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: 8088
        description: HTTP data input IP port.
        format: int32
        in: formData
        name: port
        required: false
        type: integer
      - default: ""
        description: Default source for events with this token.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: Default sourcetype for events with this token.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/http/{name}:
    delete:
      description: Delete token.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Get token configuration data.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Update token configuration data.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: 'Input disabled indicator: 0 = Input Not disabled, 1 = Input
          disabled.'
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: Default host.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: ""
        description: Index to store generated events.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: Set of indexes allowed for events with this token.
        format: ""
        in: formData
        name: indexes
        required: false
        type: string
      - default: ""
        description: Token name (inputs.conf key)
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: Default source for events with this token.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: Default sourcetype for events with this token.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/http/{name}/disable:
    post:
      description: Disable the {name} HTTP Event Collector token.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/http/{name}/enable:
    post:
      description: Enable the {name} HTTP Event Collector token.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/http/{name}/rotate:
    post:
      description: Regenerate the token value.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/monitor:
    get:
      description: List enabled and disabled monitor inputs.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      description: Create a new file or directory monitor input.
      parameters:
      - default: ""
        description: Specify a regular expression for a file path. The file path that
          matches this regular expression is not indexed.
        format: ""
        in: query
        name: blacklist
        required: false
        type: string
      - default: false
        description: If set to true, the "index" value is checked to ensure that it
          is the name of a valid index.
        format: ""
        in: query
        name: check-index
        required: false
        type: boolean
      - default: false
        description: If set to true, the "name" value is checked to ensure that it
          exists.
        format: ""
        in: query
        name: check-path
        required: false
        type: boolean
      - default: ""
        description: A string that modifies the file tracking identity for files in
          this input. The magic value "<SOURCE>" invokes special behavior (see admin
          documentation).
        format: ""
        in: query
        name: crc-salt
        required: false
        type: string
      - default: false
        description: Indicates if input monitoring is disabled.
        format: ""
        in: query
        name: disabled
        required: false
        type: boolean
      - default: false
        description: If set to true, files that are seen for the first time is read
          from the end.
        format: ""
        in: query
        name: followTail
        required: false
        type: boolean
      - default: ""
        description: The value to populate in the host field for events from this
          data input.
        format: ""
        in: query
        name: host
        required: false
        type: string
      - default: ""
        description: Specify a regular expression for a file path. If the path for
          a file matches this regular expression, the captured value is used to populate
          the host field for events from this data input. The regular expression must
          have one capture group.
        format: ""
        in: query
        name: host_regex
        required: false
        type: string
      - default: 0
        description: Use the specified slash-separate segment of the filepath as the
          host field value.
        format: int32
        in: query
        name: host_segment
        required: false
        type: integer
      - default: ""
        description: Specify a time value. If the modification time of a file being
          monitored falls outside of this rolling time window, the file is no longer
          being monitored.
        format: ""
        in: query
        name: ignore_older_than
        required: false
        type: string
      - default: default
        description: Which index events from this input should be stored in.
        format: ""
        in: query
        name: index
        required: false
        type: string
      - default: ""
        description: The file or directory path to monitor on the system.
        format: ""
        in: query
        name: name
        required: true
        type: string
      - default: false
        description: Setting this to "false" prevents monitoring of any subdirectories
          encountered within this data input.
        format: ""
        in: query
        name: recursive
        required: false
        type: boolean
      - default: ""
        description: The value to populate in the source field for events from this
          data input. The same source should not be used for multiple data inputs.
        format: ""
        in: query
        name: rename-source
        required: false
        type: string
      - default: ""
        description: The value to populate in the sourcetype field for incoming events.
        format: ""
        in: query
        name: sourcetype
        required: false
        type: string
      - default: 0
        description: When Splunk Enterprise reaches the end of a file that is being
          read, the file is kept open for a minimum of the number of seconds specified
          in this value. After this period has elapsed, the file is checked again
          for more data.
        format: int32
        in: query
        name: time-before-close
        required: false
        type: integer
      - default: ""
        description: Specify a regular expression for a file path. Only file paths
          that match this regular expression are indexed.
        format: ""
        in: query
        name: whitelist
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/monitor/{name}:
    delete:
      description: Disable the named monitor data input and remove it from the configuration.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: List the properties of a single monitor data input.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      description: Update properties of the named monitor input.
      parameters:
      - default: ""
        description: Specify a regular expression for a file path. The file path that
          matches this regular expression is not indexed.
        format: ""
        in: query
        name: blacklist
        required: false
        type: string
      - default: false
        description: If set to true, the "index" value is checked to ensure that it
          is the name of a valid index.
        format: ""
        in: query
        name: check-index
        required: false
        type: boolean
      - default: false
        description: If set to true, the "name" value is checked to ensure that it
          exists.
        format: ""
        in: query
        name: check-path
        required: false
        type: boolean
      - default: ""
        description: A string that modifies the file tracking identity for files in
          this input. The magic value "<SOURCE>" invokes special behavior (see admin
          documentation).
        format: ""
        in: query
        name: crc-salt
        required: false
        type: string
      - default: false
        description: Indicates if input monitoring is disabled.
        format: ""
        in: query
        name: disabled
        required: false
        type: boolean
      - default: false
        description: If set to true, files that are seen for the first time is read
          from the end.
        format: ""
        in: query
        name: followTail
        required: false
        type: boolean
      - default: ""
        description: The value to populate in the host field for events from this
          data input.
        format: ""
        in: query
        name: host
        required: false
        type: string
      - default: ""
        description: Specify a regular expression for a file path. If the path for
          a file matches this regular expression, the captured value is used to populate
          the host field for events from this data input. The regular expression must
          have one capture group.
        format: ""
        in: query
        name: host_regex
        required: false
        type: string
      - default: 0
        description: Use the specified slash-separate segment of the filepath as the
          host field value.
        format: int32
        in: query
        name: host_segment
        required: false
        type: integer
      - default: ""
        description: Specify a time value. If the modification time of a file being
          monitored falls outside of this rolling time window, the file is no longer
          being monitored.
        format: ""
        in: query
        name: ignore_older_than
        required: false
        type: string
      - default: default
        description: Which index events from this input should be stored in.
        format: ""
        in: query
        name: index
        required: false
        type: string
      - default: false
        description: Setting this to "false" prevents monitoring of any subdirectories
          encountered within this data input.
        format: ""
        in: query
        name: recursive
        required: false
        type: boolean
      - default: ""
        description: The value to populate in the source field for events from this
          data input. The same source should not be used for multiple data inputs.
        format: ""
        in: query
        name: rename-source
        required: false
        type: string
      - default: ""
        description: The value to populate in the sourcetype field for incoming events.
        format: ""
        in: query
        name: sourcetype
        required: false
        type: string
      - default: 0
        description: When Splunk Enterprise reaches the end of a file that is being
          read, the file is kept open for a minimum of the number of seconds specified
          in this value. After this period has elapsed, the file is checked again
          for more data.
        format: int32
        in: query
        name: time-before-close
        required: false
        type: integer
      - default: ""
        description: Specify a regular expression for a file path. Only file paths
          that match this regular expression are indexed.
        format: ""
        in: query
        name: whitelist
        required: false
        type: string
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/monitor/{name}/members:
    get:
      description: Lists all files monitored under the named monitor input.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/oneshot:
    get:
      description: Enumerates in-progress oneshot inputs. As soon as an input is complete,
        it is removed from this list.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: "0"
        description: Index of first item to return.
        format: ""
        in: query
        name: offset
        required: false
        type: string
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 'Queues a file for immediate indexing. The file must be locally
        accessible from the server. This endpoint can handle any single file: plain,
        compressed or archive. The file is indexed in full, regardless of whether
        or not it is already indexed.'
      parameters:
      - default: ""
        description: The value of the "host" field to be applied to data from this
          file.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: ""
        description: |-
          A regex to be used to extract a "host" field from the path.
          If the path matches this regular expression, the captured value is used to populate the host field for events from this data input. The regular expression must have one capture group.
        format: ""
        in: formData
        name: host_regex
        required: false
        type: string
      - default: ""
        description: Use the specified slash-separate segment of the path as the host
          field value.
        format: ""
        in: formData
        name: host_segment
        required: false
        type: string
      - default: ""
        description: The destination index for data processed from this file.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: The path to the file to be indexed. The file must be locally
          accessible by the server.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: The value of the "source" field to be applied to data from this
          file.
        format: ""
        in: formData
        name: rename-source
        required: false
        type: string
      - default: ""
        description: The value of the "sourcetype" field to be applied to data from
          this file.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/oneshot/{name}:
    get:
      description: Finds information about a single in-flight one shot input. This
        is a subset of the information in the full enumeration.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/registry:
    get:
      description: Gets current registry monitoring configuration.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates new or modifies existing registry monitoring settings.
      parameters:
      - default: 0
        description: Specifies whether or not to establish a baseline value for the
          registry keys. 1 means yes, 0 no.
        format: int32
        in: formData
        name: baseline
        required: true
        type: integer
      - default: ""
        description: Specifies the registry hive under which to monitor for changes.
        format: ""
        in: formData
        name: hive
        required: true
        type: string
      - default: ""
        description: Name of the configuration stanza.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: Specifies a regex. If specified, collect changes if a process
          name matches that regex.
        format: ""
        in: formData
        name: proc
        required: true
        type: string
      - description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: type
        required: false
        type: string
      - default: 0
        description: Indicates whether the monitoring is disabled.
        format: int32
        in: formData
        name: disabled
        required: false
        type: integer
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: false
        description: Indicates whether to monitor all Registry hives beneath the specified
          hive.
        format: ""
        in: formData
        name: monitorSubnodes
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/registry/{name}:
    delete:
      description: Deletes registry monitoring configuration stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Gets current registry monitoring configuration stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Modifies given registry monitoring stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: 0
        description: Specifies whether or not to establish a baseline value for the
          registry keys. 1 means yes, 0 no.
        format: int32
        in: formData
        name: baseline
        required: true
        type: integer
      - default: ""
        description: Specifies the registry hive under which to monitor for changes.
        format: ""
        in: formData
        name: hive
        required: true
        type: string
      - default: ""
        description: Specifies a regex. If specified, collect changes if a process
          name matches that regex.
        format: ""
        in: formData
        name: proc
        required: true
        type: string
      - default: ""
        description: |-
          A list of Registry events types that you want to monitor. Separate each type with a pipe ('|') character. For example,
          set|create|delete|rename
        format: ""
        in: formData
        name: type
        required: true
        type: string
      - default: 0
        description: Indicates whether the monitoring is disabled.
        format: int32
        in: formData
        name: disabled
        required: false
        type: integer
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: false
        description: Indicates whether to monitor all Registry hives beneath the specified
          hive.
        format: ""
        in: formData
        name: monitorSubnodes
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/script:
    get:
      description: Gets the configuration settings for scripted inputs.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: "0"
        description: Index of first item to return.
        format: ""
        in: query
        name: offset
        required: false
        type: string
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Configures settings for new scripted inputs.
      parameters:
      - default: false
        description: Specifies whether the input script is disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: Sets the host for events from this input. Defaults to whatever
          host sent the event.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: Sets the index for events from this input. Defaults to the main
          index.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: 60
        description: Specify an integer or cron schedule. This parameter specifies
          how often to execute the specified script, in seconds or a valid cron schedule.
          If you specify a cron schedule, the script is not executed on start-up.
        format: double
        in: formData
        name: interval
        required: true
        type: number
      - default: ""
        description: Specify the name of the scripted input.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: |-
          User to run the script as.
          If you provide a username, Splunk Enterprise generates an auth token for that user and passes it to the script.
        format: ""
        in: formData
        name: passAuth
        required: false
        type: string
      - default: ""
        description: Specify a new name for the source field for the script.
        format: ""
        in: formData
        name: rename-source
        required: false
        type: string
      - default: ""
        description: |-
          Sets the source key/field for events from this input. Defaults to the input file path.
          Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.

          Note: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieived. Consider use of source types, tagging, and search wildcards before overriding this value.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: |-
          Sets the sourcetype key/field for events from this input. If unset, Splunk Enterprise picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.
          Sets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.

          Primarily used to explicitly declare the source type for this data, as opposed to allowing it to be determined using automated methods. This is typically important both for searchability and for applying the relevant configuration for this type of data during parsing and indexing.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/script/{name}:
    delete:
      description: Removes the scripted input specified by {name}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Returns the configuration settings for the scripted input specified
        by {name}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Configures settings for scripted input specified by {name}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: Specifies whether the input script is disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: Sets the host for events from this input. Defaults to whatever
          host sent the event.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: Sets the index for events from this input. Defaults to the main
          index.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: 60
        description: Specify an integer or cron schedule. This parameter specifies
          how often to execute the specified script, in seconds or a valid cron schedule.
          If you specify a cron schedule, the script is not executed on start-up.
        format: double
        in: formData
        name: interval
        required: false
        type: number
      - default: ""
        description: |-
          User to run the script as.
          If you provide a username, Splunk Enterprise generates an auth token for that user and passes it to the script.
        format: ""
        in: formData
        name: passAuth
        required: false
        type: string
      - description: Specify a new name for the source field for the script.
        format: ""
        in: formData
        name: rename-source
        required: false
        type: string
      - default: ""
        description: |-
          Sets the source key/field for events from this input. Defaults to the input file path.
          Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.

          Note: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieived. Consider use of source types, tagging, and search wildcards before overriding this value.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: |-
          Sets the sourcetype key/field for events from this input. If unset, Splunk Enterprise picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.
          Sets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.

          Primarily used to explicitly declare the source type for this data, as opposed to allowing it to be determined using automated methods. This is typically important both for searchability and for applying the relevant configuration for this type of data during parsing and indexing.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/script/restart:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Causes a restart on a given scripted input.
      parameters:
      - default: ""
        description: Path to the script to be restarted. This path must match an already-configured
          existing scripted input.
        format: ""
        in: formData
        name: script
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/cooked:
    get:
      description: Returns information about all cooked TCP inputs.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates a new container for managing cooked data.
      parameters:
      - default: false
        description: If SSL is not already configured, error is returned
        format: ""
        in: formData
        name: SSL
        required: false
        type: boolean
      - default: dns
        description: |-
          Valid values: (ip | dns | none)
          Set the host for the remote server that is sending data.

          ip sets the host to the IP address of the remote server sending data.

          dns sets the host to the reverse DNS entry for the IP address of the remote server sending data.

          none leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.

          Default value is dns.
        format: ""
        in: formData
        name: connection_host
        required: false
        type: string
      - default: false
        description: Indicates whether the input is disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: The default value to fill in for events lacking a host value.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: 0
        description: The port number of this input.
        format: int32
        in: formData
        name: name
        required: true
        type: integer
      - default: parsingQueue
        description: |-
          Specifies where the input processor should deposit the events it reads.
          "parsingQueue" | "indexQueue"
        format: ""
        in: formData
        name: queue
        required: false
        type: string
      - default: ""
        description: Restrict incoming connections on this port to the host specified
          here.
        format: ""
        in: formData
        name: restrictToHost
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/cooked/{name}:
    delete:
      description: Removes the cooked TCP inputs for port or host:port specified by
        {name}
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Returns information for the cooked TCP input specified by {name}.
        If port is restricted to a host, name should be URI-encoded host:port.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Updates the container for managing cooked data.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: If SSL is not already configured, error is returned
        format: ""
        in: formData
        name: SSL
        required: false
        type: boolean
      - default: ip
        description: |-
          Valid values: (ip | dns | none)
          Set the host for the remote server that is sending data.

          ip sets the host to the IP address of the remote server sending data.

          dns sets the host to the reverse DNS entry for the IP address of the remote server sending data.

          none leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.

          Default value is ip.
        format: ""
        in: formData
        name: connection_host
        required: false
        type: string
      - default: false
        description: Indicates whether the input is disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: The default value to fill in for events lacking a host value.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: ""
        description: Restrict incoming connections on this port to the host specified
          here.
        format: ""
        in: formData
        name: restrictToHost
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/cooked/{name}/connections:
    get:
      description: Retrieves list of active connections to the named port.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/raw:
    get:
      description: Returns information about all raw TCP inputs.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field used to sort
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates a new data input for accepting raw TCP data.
      parameters:
      - default: dns
        description: |-
          Valid values: (ip | dns | none)
          Set the host for the remote server that is sending data.

          ip sets the host to the IP address of the remote server sending data.

          dns sets the host to the reverse DNS entry for the IP address of the remote server sending data.

          none leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.

          Default value is ip.
        format: ""
        in: formData
        name: connection_host
        required: false
        type: string
      - default: false
        description: Indicates whether the inputs are disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: Host from which the indexer gets data.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: Index to store generated events.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: The input port which receives raw data.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: |-
          Valid values: (parsingQueue | indexQueue)
          Specifies where the input processor should deposit the events it reads. Defaults to parsingQueue.

          Set queue to parsingQueue to apply props.conf and other parsing rules to your data. For more information about props.conf and rules for timestamping and linebreaking, refer to props.conf and the online documentation at "Monitor files and directories with inputs.conf"

          Set queue to indexQueue to send your data directly into the index.
        format: ""
        in: formData
        name: queue
        required: false
        type: string
      - default: 0
        description: |-
          Specifies in seconds the timeout value for adding a Done-key. Default value is 10 seconds.
          If a connection over the port specified by name remains idle after receiving data for specified number of seconds, it adds a Done-key. This implies the last event is completely received.
        format: int32
        in: formData
        name: rawTcpDoneTimeout
        required: false
        type: integer
      - default: ""
        description: Allows for restricting this input to only accept data from the
          host specified here.
        format: ""
        in: formData
        name: restrictToHost
        required: false
        type: string
      - default: false
        description: ""
        format: ""
        in: formData
        name: SSL
        required: false
        type: boolean
      - default: ""
        description: |-
          Sets the source key/field for events from this input. Defaults to the input file path.
          Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.

          Note: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieved. Consider use of source types, tagging, and search wildcards before overriding this value.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: |-
          Set the source type for events from this input.
          "sourcetype=" is automatically prepended to <string>.

          Defaults to audittrail (if signedaudit=true) or fschange (if signedaudit=false).
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/raw/{name}:
    delete:
      description: Removes the raw inputs for port or host:port specified by {name}
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Returns information about raw TCP input port {name}. If port is
        restricted to a host, name should be URI-encoded host:port.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - default: ""
        description: Host from which the indexer gets data.
        format: ""
        in: header
        name: host
        required: false
        type: string
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: ""
        format: ""
        in: formData
        name: SSL
        required: false
        type: boolean
      - default: dns
        description: |-
          Valid values: (ip | dns | none)
          Set the host for the remote server that is sending data.

          ip sets the host to the IP address of the remote server sending data.

          dns sets the host to the reverse DNS entry for the IP address of the remote server sending data.

          none leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.

          Default value is ip.
        format: ""
        in: formData
        name: connection_host
        required: false
        type: string
      - default: false
        description: Indicates whether the inputs are disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: Host from which the indexer gets data.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: Index to store generated events.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: |-
          Valid values: (parsingQueue | indexQueue)
          Specifies where the input processor should deposit the events it reads. Defaults to parsingQueue.

          Set queue to parsingQueue to apply props.conf and other parsing rules to your data. For more information about props.conf and rules for timestamping and linebreaking, refer to props.conf and the online documentation at "Monitor files and directories with inputs.conf"

          Set queue to indexQueue to send your data directly into the index.
        format: ""
        in: formData
        name: queue
        required: false
        type: string
      - default: 0
        description: |-
          Specifies in seconds the timeout value for adding a Done-key. Default value is 10 seconds.
          If a connection over the port specified by name remains idle after receiving data for specified number of seconds, it adds a Done-key. This implies the last event is completely received.
        format: int32
        in: formData
        name: rawTcpDoneTimeout
        required: false
        type: integer
      - default: ""
        description: Allows for restricting this input to only accept data from the
          host specified here.
        format: ""
        in: formData
        name: restrictToHost
        required: false
        type: string
      - default: ""
        description: |-
          Sets the source key/field for events from this input. Defaults to the input file path.
          Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.

          Note: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieved. Consider use of source types, tagging, and search wildcards before overriding this value.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: |-
          Set the source type for events from this input.
          "sourcetype=" is automatically prepended to <string>.

          Defaults to audittrail (if signedaudit=true) or fschange (if signedaudit=false).
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/raw/{name}/connections:
    get:
      description: View all connections to the named data input.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/splunktcptoken:
    get:
      description: Returns all configured tokens.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: string
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create a new token.
      parameters:
      - description: Required. Name for the token to create.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: Optional. Token value to use. If unspecified, a token is generated
          automatically.
        format: ""
        in: formData
        name: token
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/splunktcptoken/{name}:
    delete:
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: string
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: string
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: ""
        description: New token value.
        format: ""
        in: formData
        name: token
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/ssl:
    get:
      description: Returns SSL configuration. There is only one SSL configuration
        for all input ports.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/tcp/ssl/{name}:
    get:
      description: Returns the SSL configuration for the host {name}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Configures SSL attributes for the host {name}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: Indicates whether the inputs are disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: Server certificate password, if any.
        format: ""
        in: formData
        name: password
        required: false
        type: string
      - default: false
        description: Determines whether a client must authenticate.
        format: ""
        in: formData
        name: requireClientCert
        required: false
        type: boolean
      - default: ""
        description: Certificate authority list (root file)
        format: ""
        in: formData
        name: rootCA
        required: false
        type: string
      - default: ""
        description: Full path to the server certificate.
        format: ""
        in: formData
        name: serverCert
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/udp:
    get:
      description: List enabled and disabled UDP data inputs.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name for sorting
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create a new UDP data input.
      parameters:
      - default: ip
        description: |-
          Valid values: (ip | dns | none)
          Set the host for the remote server that is sending data.

          ip sets the host to the IP address of the remote server sending data.

          dns sets the host to the reverse DNS entry for the IP address of the remote server sending data.

          none leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.

          Default value is ip.
        format: ""
        in: formData
        name: connection_host
        required: false
        type: string
      - default: false
        description: Indicates if the input is disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: |-
          The value to populate in the host field for incoming events.
          This is used during parsing/indexing, in particular to set the host field. It is also the host field used at search time.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: Which index events from this input should be stored in.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: The UDP port that this input should listen on.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: false
        description: If set to true, prevents Splunk Enterprise from prepending a
          timestamp and hostname to incoming events.
        format: ""
        in: formData
        name: no_appending_timestamp
        required: false
        type: boolean
      - default: false
        description: If set to true, Splunk Enterprise does remove the priority field
          from incoming syslog events.
        format: ""
        in: formData
        name: no_priority_stripping
        required: false
        type: boolean
      - default: ""
        description: Which queue events from this input should be sent to. Generally
          this does not need to be changed.
        format: ""
        in: formData
        name: queue
        required: false
        type: string
      - default: ""
        description: |-
          Restrict incoming connections on this port to the host specified here.
          If this is not set, the value specified in [udp://<remote server>:<port>] in inputs.conf is used.
        format: ""
        in: formData
        name: restrictToHost
        required: false
        type: string
      - default: ""
        description: The value to populate in the source field for incoming events.
          The same source should not be used for multiple data inputs.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: The value to populate in the sourcetype field for incoming events.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/udp/{name}:
    delete:
      description: Disable the named UDP data input and remove it from the configuration.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: List the properties of a single UDP data input port or host:port
        {name}. If port is restricted to a host, name should be URI-encoded host:port.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit properties of the named UDP data input.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: ip
        description: |-
          Valid values: (ip | dns | none)
          Set the host for the remote server that is sending data.

          ip sets the host to the IP address of the remote server sending data.

          dns sets the host to the reverse DNS entry for the IP address of the remote server sending data.

          none leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.

          Default value is ip.
        format: ""
        in: formData
        name: connection_host
        required: false
        type: string
      - default: false
        description: Indicates if the input is disabled.
        format: ""
        in: formData
        name: disabled
        required: false
        type: boolean
      - default: ""
        description: |-
          The value to populate in the host field for incoming events.
          This is used during parsing/indexing, in particular to set the host field. It is also the host field used at search time.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: Which index events from this input should be stored in.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: false
        description: If set to true, prevents Splunk Enterprise from prepending a
          timestamp and hostname to incoming events.
        format: ""
        in: formData
        name: no_appending_timestamp
        required: false
        type: boolean
      - default: false
        description: If set to true, Splunk Enterprise does remove the priority field
          from incoming syslog events.
        format: ""
        in: formData
        name: no_priority_stripping
        required: false
        type: boolean
      - default: ""
        description: Which queue events from this input should be sent to. Generally
          this does not need to be changed.
        format: ""
        in: formData
        name: queue
        required: false
        type: string
      - default: ""
        description: |-
          Restrict incoming connections on this port to the host specified here.
          If this is not set, the value specified in [udp://<remote server>:<port>] in inputs.conf is used.
        format: ""
        in: formData
        name: restrictToHost
        required: false
        type: string
      - default: ""
        description: The value to populate in the source field for incoming events.
          The same source should not be used for multiple data inputs.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: The value to populate in the sourcetype field for incoming events.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/udp/{name}/connections:
    get:
      description: Lists connections to the named UDP input.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/win-event-log-collections:
    get:
      description: Retrieves a list of configured event log collections.
      parameters:
      - default: ""
        description: For internal use. Used by the UI when editing the initial host
          from which we gather event log data.
        format: ""
        in: query
        name: lookup_host
        required: false
        type: string
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates of modifies existing event log collection settings. You
        can configure both native and WMI collection with this endpoint.
      parameters:
      - default: ""
        description: A comma-separated list of additional hosts to be used for monitoring.
          The first host should be specified with "lookup_host", and the additional
          ones using this parameter.
        format: ""
        in: formData
        name: hosts
        required: false
        type: string
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: |-
          List of event log names from which to gather data:
           WMI collection format (CSV) example:
          logs=Application%2CSystem%2CSetup%2CSecurity
           Native event log collection format example:
          logs=Application&logs=System&logs=Setup
        format: ""
        in: formData
        name: logs
        required: false
        type: string
      - default: ""
        description: Host from which to monitor log events. To specify additional
          hosts to be monitored using WMI, use the "hosts" parameter.
        format: ""
        in: formData
        name: lookup_host
        required: true
        type: string
      - description: Collection name. This name appears in configuration file, as
          well as the source and the sourcetype of the indexed data. If the value
          is "localhost", it uses native event log collection; otherwise, it uses
          WMI.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/win-event-log-collections/{name}:
    delete:
      description: Deletes a given event log collection.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Gets the configuration settings for a given event log collection.
      parameters:
      - default: ""
        description: For internal use. Used by the UI when editing the initial host
          from which we gather event log data.
        format: ""
        in: query
        name: lookup_host
        required: false
        type: string
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: ""
        description: A comma-separated list of additional hosts to be used for monitoring.
          The first host should be specified with "lookup_host", and the additional
          ones using this parameter.
        format: ""
        in: formData
        name: hosts
        required: false
        type: string
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: A comma-separated list of event log names to gather data from.
        format: ""
        in: formData
        name: logs
        required: false
        type: string
      - description: This is a host from which we monitor log events. To specify additional
          hosts to be monitored using WMI, use the "hosts" parameter.
        format: ""
        in: formData
        name: lookup_host
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/win-perfmon:
    get:
      description: Gets current performance monitoring configuration.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates new or modifies existing performance monitoring collection
        settings.
      parameters:
      - default: ""
        description: |-
          A set of counters to monitor. A '*' is equivalent to all counters.
          Specify each counter as a separate argument to the POST operation.
        format: ""
        in: formData
        name: counters
        required: false
        type: string
      - default: Docs-W8R2-Std7
        description: Name of the host for the Windows Performance Monitor.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: |-
          A set of counter instances to monitor. A '*' is equivalent to all instances.
          Specify each instance as a separate argument to the POST operation.
        format: ""
        in: formData
        name: instances
        required: false
        type: string
      - default: 0
        description: How frequently, in seconds, to poll for new data.
        format: int32
        in: formData
        name: interval
        required: false
        type: integer
      - default: ""
        description: This is the name of the collection. This name appears in configuration
          file, as well as the source and the sourcetype of the indexed data.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: ""
        description: A valid performance monitor object (for example, 'Process,' 'Server,'
          'PhysicalDisk.')
        format: ""
        in: formData
        name: object
        required: false
        type: string
      - default: ""
        description: Source for inputs.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: Source type of input.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/win-perfmon/{name}:
    delete:
      description: Deletes a given monitoring stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Gets settings for a given perfmon stanza.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: ""
        description: |-
          A set of counters to monitor. A '*' is equivalent to all counters.
          Specify each counter as a separate argument to the POST operation.
        format: ""
        in: formData
        name: counters
        required: false
        type: string
      - default: Docs-W8R2-Std7
        description: Name of the host for the Windows Performance Monitor.
        format: ""
        in: formData
        name: host
        required: false
        type: string
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: |-
          A set of counter instances to monitor. A '*' is equivalent to all instances.
          Specify each instance as a separate argument to the POST operation.
        format: ""
        in: formData
        name: instances
        required: false
        type: string
      - default: 0
        description: How frequently, in seconds, to poll for new data.
        format: int32
        in: formData
        name: interval
        required: false
        type: integer
      - default: ""
        description: A valid performance monitor object (for example, 'Process,' 'Server,'
          'PhysicalDisk.')
        format: ""
        in: formData
        name: object
        required: false
        type: string
      - default: ""
        description: Source for inputs.
        format: ""
        in: formData
        name: source
        required: false
        type: string
      - default: ""
        description: Source type of input.
        format: ""
        in: formData
        name: sourcetype
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/win-wmi-collections:
    get:
      description: /services/data/inputs/win-wmi-collections
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: "0"
        description: Index of first item to return.
        format: ""
        in: query
        name: offset
        required: false
        type: string
      - description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name use for sorting
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - default: ""
        description: A valid WMI class name.
        format: ""
        in: formData
        name: classes
        required: true
        type: string
      - default: 0
        description: Disables the given collection.
        format: int32
        in: formData
        name: disabled
        required: false
        type: integer
      - default: 1. *
        description: |-
          Properties (fields) that you want to gather from the given class.
          Specify each property as a separate argument to the POST operation.
        format: ""
        in: formData
        name: fields
        required: false
        type: string
      - default: default
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: empty
        description: |-
          Instances of a given class for which data is gathered.
          Specify each instance as a separate argument to the POST operation.
        format: ""
        in: formData
        name: instances
        required: false
        type: string
      - description: The interval, in seconds, at which the WMI provider(s) is queried.
        format: ""
        in: formData
        name: interval
        required: true
        type: string
      - default: ""
        description: This is the server from which we is gathering WMI data. If you
          need to gather data from more than one machine, additional servers can be
          specified in the 'server' parameter.
        format: ""
        in: formData
        name: lookup_host
        required: true
        type: string
      - default: ""
        description: This is the name of the collection. This name appears in configuration
          file, as well as the source and the sourcetype of the indexed data.
        format: ""
        in: formData
        name: name
        required: true
        type: string
      - default: localhost
        description: A comma-separated list of additional servers that you want to
          gather data from. Use this if you need to gather from more than a single
          machine. See also lookup_host.
        format: ""
        in: formData
        name: server
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/inputs/win-wmi-collections/{name}:
    delete:
      description: /services/data/inputs/win-wmi-collections/{name}
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    get:
      description: Gets information about a single collection.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Modifies a given WMI collection.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      - default: ""
        description: A valid WMI class name.
        format: ""
        in: formData
        name: classes
        required: true
        type: string
      - default: 0
        description: Disables the given collection.
        format: int32
        in: formData
        name: disabled
        required: false
        type: integer
      - default: ""
        description: |-
          Properties (fields) that you want to gather from the given class.
          Specify each property as a separate argument to the POST operation.
        format: ""
        in: formData
        name: fields
        required: false
        type: string
      - default: ""
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: index
        required: false
        type: string
      - default: ""
        description: The index in which to store the gathered data.
        format: ""
        in: formData
        name: instances
        required: false
        type: string
      - default: ""
        description: The interval, in seconds, at which the WMI provider(s) is queried.
        format: ""
        in: formData
        name: interval
        required: true
        type: string
      - default: ""
        description: This is the server from which we is gathering WMI data. If you
          need to gather data from more than one machine, additional servers can be
          specified in the 'server' parameter.
        format: ""
        in: formData
        name: lookup_host
        required: true
        type: string
      - default: ""
        description: A comma-separated list of additional servers that you want to
          gather data from. Use this if you need to gather from more than a single
          machine. See also lookup_host parameter.
        format: ""
        in: formData
        name: server
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/modular-inputs:
    get:
      description: Lists information about configured modular inputs.
      parameters:
      - default: 30
        description: Maximum number of entries to return. Set value to -1 to get all
          available entries.
        format: int32
        in: query
        name: count
        required: false
        type: integer
      - default: 0
        description: Index of first item to return.
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: ""
        description: Response filter, where the response field values are matched
          against this search expression.
        format: ""
        in: query
        name: search
        required: false
        type: string
      - default: asc
        description: "Response sort order:\nasc = ascending \ndesc = descending"
        format: ""
        in: query
        name: sort_dir
        required: false
        type: string
      - default: name
        description: Field name to use for sorting.
        format: ""
        in: query
        name: sort_key
        required: false
        type: string
      - default: auto
        description: "Collated ordering:\nauto = If all field values are numeric,
          collate numerically. Otherwise, collate alphabetically. \nalpha = Collate
          alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically,
          case-sensitive. \nnum = Collate numerically."
        format: ""
        in: query
        name: sort_mode
        required: false
        type: string
      - default: false
        description: "Response type:\ntrue = Summarized response, omitting some index
          details, providing a faster response. \nfalse = full response."
        format: ""
        in: query
        name: summarize
        required: false
        type: boolean
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/data/modular-inputs/{name}:
    get:
      description: Lists information about the modular input specified by {name}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/indexing/preview:
    get:
      description: Return a list of all data preview jobs. Data returned includes
        the Splunk Enterprise management URI to access each preview job.
      parameters: []
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create a preview data job for the specified source file, returning
        the preview data job ID.
      parameters:
      - default: ""
        description: The absolute file path to a local file that you want to preview
          data returned from indexing.
        format: ""
        in: formData
        name: input.path
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/indexing/preview/{job_id}:
    get:
      description: Returns the props.conf settings for the data preview job specified
        by {job_id}.
      parameters:
      - description: ""
        format: ""
        in: path
        name: job_id
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/receivers/simple:
    post:
      consumes:
      - application/json
      - application/xml
      description: Create events from the contents contained in the HTTP body.
      parameters:
      - default: ""
        description: The value to populate in the host field for events from this
          data input.
        format: ""
        in: query
        name: host
        required: false
        type: string
      - default: ""
        description: A regular expression used to extract the host value from each
          event.
        format: ""
        in: query
        name: host_regex
        required: false
        type: string
      - default: default
        description: The destination index where events are sent.
        format: ""
        in: query
        name: index
        required: false
        type: string
      - default: ""
        description: The source value to fill in the metadata for this input's events.
        format: ""
        in: query
        name: source
        required: false
        type: string
      - default: ""
        description: The sourcetype to apply to events from this input.
        format: ""
        in: query
        name: sourcetype
        required: false
        type: string
      - description: Raw event text. This is the entirety of the HTTP request body.
        in: body
        name: body
        schema:
          type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
  /services/receivers/stream:
    post:
      consumes:
      - application/json
      - application/xml
      description: Create events from the stream of data following HTTP headers.
      parameters:
      - default: ""
        description: The value to populate in the host field for events from this
          data input.
        format: ""
        in: query
        name: host
        required: false
        type: string
      - default: ""
        description: A regular expression used to extract the host value from each
          event.
        format: ""
        in: query
        name: host_regex
        required: false
        type: string
      - default: ""
        description: The index to send events from this input to.
        format: ""
        in: query
        name: index
        required: false
        type: string
      - default: ""
        description: The source value to fill in the metadata for this input's events.
        format: ""
        in: query
        name: source
        required: false
        type: string
      - default: ""
        description: The sourcetype to apply to events from this input
        format: ""
        in: query
        name: sourcetype
        required: false
        type: string
      - description: Raw event text. This does not need to be presented as a complete
          HTTP request, but can be streamed in as data is available.
        in: body
        name: body
        schema:
          type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: Success response
          schema:
            type: string
swagger: "2.0"
