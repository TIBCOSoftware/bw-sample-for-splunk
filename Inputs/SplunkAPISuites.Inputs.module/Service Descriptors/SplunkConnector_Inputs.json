{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "SplunkConnector_Inputs",
    "x-lastModified": "Aug 26, 2016 17:00PM PST"
  },
  "paths": {
    "/services/data/inputs/ad": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering.\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type.\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Gets current active directory monitoring configuration."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "baseline",
            "in": "formData",
            "description": "Indicates whether to query baseline objects. Defaults to true.\nBaseline objects are objects which currently reside in Active Directory and include previously deleted objects.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Host name for the Active Directory Monitor.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "Docs-W8R2-Std7"
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.\nIf not specified defaults to the default index.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "monitorSubtree",
            "in": "formData",
            "description": "Whether or not to monitor the subtree(s) of a given directory tree path. 1 means yes, 0 means no.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "name",
            "in": "formData",
            "description": "A unique name that represents a configuration or set of configurations for a specific domain controller.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "printSchema",
            "in": "formData",
            "description": "Indicates whether to print the Active Directory schema. Defaults to true.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Source for data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Source type of data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "startingnode",
            "in": "formData",
            "description": "Where in the Active Directory directory tree to start monitoring. If not specified, attempts to start at the root of the directory tree.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "targetDc",
            "in": "formData",
            "description": "Specifies a fully qualified domain name of a valid, network-accessible domain controller. If not specified, Splunk Enterprise gets the local domain controller.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Creates new or modifies existing performance monitoring settings.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/ad/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Gets the current configuration for a given active directory monitoring stanza."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "baseline",
            "in": "formData",
            "description": "Indicates whether to query baseline objects. Defaults to true.\nBaseline objects are objects which currently reside in Active Directory and include previously deleted objects.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Host name for the Active Directory Monitor.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "Docs-W8R2-Std7"
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.\nIf not specified defaults to the default index.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "monitorSubtree",
            "in": "formData",
            "description": "Whether or not to monitor the subtree(s) of a given directory tree path. 1 means yes, 0 means no.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "printSchema",
            "in": "formData",
            "description": "Indicates whether to print the Active Directory schema. Defaults to true.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Source for data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Source type of data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "startingNode",
            "in": "formData",
            "description": "Where in the Active Directory directory tree to start monitoring. If not specified, attempts to start at the root of the directory tree.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "targetDc",
            "in": "formData",
            "description": "Specifies a fully qualified domain name of a valid, network-accessible DC. If not specified, Splunk Enterprise gets the local computer's DC.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Modifies a given active directory monitoring stanza.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Deletes a given active directory monitoring stanza."
      }
    },
    "/services/data/inputs/all": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "common",
            "in": "query",
            "description": "Indicates whether to return only attributes commom to all inputs. These common attributes are:\napp\ndisabled\nhost\nindex\nowner\nsource\nsourcetype\ntitle\nupdated",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Lists all inputs, including modular inputs."
      }
    },
    "/services/data/inputs/all/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "common",
            "in": "query",
            "description": "Indicates whether to return only attributes commom to all inputs. These common attributes are:\napp\ndisabled\nhost\nindex\nowner\nsource\nsourcetype\ntitle\nupdated",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Lists details for inputs for the input source specified by {name}."
      }
    },
    "/services/data/inputs/http": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Return global configuration and a list of tokens."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "dedicatedIoThreads",
            "in": "formData",
            "description": "Number of threads used by HTTP Input server.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Input disabled indicator: 0 = Input Not disabled, 1 = Input disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "enableSSL",
            "in": "formData",
            "description": "Enable SSL protocol for HTTP data input. 1 = SSL enabled, 0 = SSL disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Index to store generated events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "indexes",
            "in": "formData",
            "description": "Set of indexes allowed for events with this token.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "maxSockets",
            "in": "formData",
            "description": "Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "maxThreads",
            "in": "formData",
            "description": "Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "0"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Token name (inputs.conf key)",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "port",
            "in": "formData",
            "description": "HTTP data input IP port.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 8088
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Default source for events with this token.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Default sourcetype for events with this token.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Modify global configuration, add and modify tokens.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/http/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Get token configuration data."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Input disabled indicator: 0 = Input Not disabled, 1 = Input disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Default host.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Index to store generated events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "indexes",
            "in": "formData",
            "description": "Set of indexes allowed for events with this token.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Token name (inputs.conf key)",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Default source for events with this token.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Default sourcetype for events with this token.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Update token configuration data.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Delete token."
      }
    },
    "/services/data/inputs/http/{name}/disable": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Disable the {name} HTTP Event Collector token."
      }
    },
    "/services/data/inputs/http/{name}/enable": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Enable the {name} HTTP Event Collector token."
      }
    },
    "/services/data/inputs/http/{name}/rotate": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Regenerate the token value."
      }
    },
    "/services/data/inputs/monitor": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "List enabled and disabled monitor inputs."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "blacklist",
            "in": "query",
            "description": "Specify a regular expression for a file path. The file path that matches this regular expression is not indexed.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "check-index",
            "in": "query",
            "description": "If set to true, the \"index\" value is checked to ensure that it is the name of a valid index.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "check-path",
            "in": "query",
            "description": "If set to true, the \"name\" value is checked to ensure that it exists.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "crc-salt",
            "in": "query",
            "description": "A string that modifies the file tracking identity for files in this input. The magic value \"<SOURCE>\" invokes special behavior (see admin documentation).",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Indicates if input monitoring is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "followTail",
            "in": "query",
            "description": "If set to true, files that are seen for the first time is read from the end.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "query",
            "description": "The value to populate in the host field for events from this data input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_regex",
            "in": "query",
            "description": "Specify a regular expression for a file path. If the path for a file matches this regular expression, the captured value is used to populate the host field for events from this data input. The regular expression must have one capture group.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_segment",
            "in": "query",
            "description": "Use the specified slash-separate segment of the filepath as the host field value.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "ignore_older_than",
            "in": "query",
            "description": "Specify a time value. If the modification time of a file being monitored falls outside of this rolling time window, the file is no longer being monitored.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "query",
            "description": "Which index events from this input should be stored in.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The file or directory path to monitor on the system.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Setting this to \"false\" prevents monitoring of any subdirectories encountered within this data input.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "rename-source",
            "in": "query",
            "description": "The value to populate in the source field for events from this data input. The same source should not be used for multiple data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "query",
            "description": "The value to populate in the sourcetype field for incoming events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "time-before-close",
            "in": "query",
            "description": "When Splunk Enterprise reaches the end of a file that is being read, the file is kept open for a minimum of the number of seconds specified in this value. After this period has elapsed, the file is checked again for more data.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "whitelist",
            "in": "query",
            "description": "Specify a regular expression for a file path. Only file paths that match this regular expression are indexed.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Create a new file or directory monitor input."
      }
    },
    "/services/data/inputs/monitor/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "List the properties of a single monitor data input."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "blacklist",
            "in": "query",
            "description": "Specify a regular expression for a file path. The file path that matches this regular expression is not indexed.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "check-index",
            "in": "query",
            "description": "If set to true, the \"index\" value is checked to ensure that it is the name of a valid index.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "check-path",
            "in": "query",
            "description": "If set to true, the \"name\" value is checked to ensure that it exists.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "crc-salt",
            "in": "query",
            "description": "A string that modifies the file tracking identity for files in this input. The magic value \"<SOURCE>\" invokes special behavior (see admin documentation).",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Indicates if input monitoring is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "followTail",
            "in": "query",
            "description": "If set to true, files that are seen for the first time is read from the end.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "query",
            "description": "The value to populate in the host field for events from this data input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_regex",
            "in": "query",
            "description": "Specify a regular expression for a file path. If the path for a file matches this regular expression, the captured value is used to populate the host field for events from this data input. The regular expression must have one capture group.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_segment",
            "in": "query",
            "description": "Use the specified slash-separate segment of the filepath as the host field value.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "ignore_older_than",
            "in": "query",
            "description": "Specify a time value. If the modification time of a file being monitored falls outside of this rolling time window, the file is no longer being monitored.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "query",
            "description": "Which index events from this input should be stored in.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Setting this to \"false\" prevents monitoring of any subdirectories encountered within this data input.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "rename-source",
            "in": "query",
            "description": "The value to populate in the source field for events from this data input. The same source should not be used for multiple data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "query",
            "description": "The value to populate in the sourcetype field for incoming events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "time-before-close",
            "in": "query",
            "description": "When Splunk Enterprise reaches the end of a file that is being read, the file is kept open for a minimum of the number of seconds specified in this value. After this period has elapsed, the file is checked again for more data.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "whitelist",
            "in": "query",
            "description": "Specify a regular expression for a file path. Only file paths that match this regular expression are indexed.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Update properties of the named monitor input."
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Disable the named monitor data input and remove it from the configuration."
      }
    },
    "/services/data/inputs/monitor/{name}/members": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Lists all files monitored under the named monitor input."
      }
    },
    "/services/data/inputs/oneshot": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "0"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Enumerates in-progress oneshot inputs. As soon as an input is complete, it is removed from this list."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "host",
            "in": "formData",
            "description": "The value of the \"host\" field to be applied to data from this file.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_regex",
            "in": "formData",
            "description": "A regex to be used to extract a \"host\" field from the path.\nIf the path matches this regular expression, the captured value is used to populate the host field for events from this data input. The regular expression must have one capture group.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_segment",
            "in": "formData",
            "description": "Use the specified slash-separate segment of the path as the host field value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The destination index for data processed from this file.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The path to the file to be indexed. The file must be locally accessible by the server.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "rename-source",
            "in": "formData",
            "description": "The value of the \"source\" field to be applied to data from this file.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "The value of the \"sourcetype\" field to be applied to data from this file.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Queues a file for immediate indexing. The file must be locally accessible from the server. This endpoint can handle any single file: plain, compressed or archive. The file is indexed in full, regardless of whether or not it is already indexed.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/oneshot/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Finds information about a single in-flight one shot input. This is a subset of the information in the full enumeration."
      }
    },
    "/services/data/inputs/registry": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Gets current registry monitoring configuration."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "baseline",
            "in": "formData",
            "description": "Specifies whether or not to establish a baseline value for the registry keys. 1 means yes, 0 no.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "hive",
            "in": "formData",
            "description": "Specifies the registry hive under which to monitor for changes.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Name of the configuration stanza.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "proc",
            "in": "formData",
            "description": "Specifies a regex. If specified, collect changes if a process name matches that regex.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the monitoring is disabled.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "monitorSubnodes",
            "in": "formData",
            "description": "Indicates whether to monitor all Registry hives beneath the specified hive.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Creates new or modifies existing registry monitoring settings.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/registry/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Gets current registry monitoring configuration stanza."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "baseline",
            "in": "formData",
            "description": "Specifies whether or not to establish a baseline value for the registry keys. 1 means yes, 0 no.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "hive",
            "in": "formData",
            "description": "Specifies the registry hive under which to monitor for changes.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "proc",
            "in": "formData",
            "description": "Specifies a regex. If specified, collect changes if a process name matches that regex.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "type",
            "in": "formData",
            "description": "A list of Registry events types that you want to monitor. Separate each type with a pipe ('|') character. For example,\nset|create|delete|rename",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the monitoring is disabled.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "monitorSubnodes",
            "in": "formData",
            "description": "Indicates whether to monitor all Registry hives beneath the specified hive.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Modifies given registry monitoring stanza.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Deletes registry monitoring configuration stanza."
      }
    },
    "/services/data/inputs/script": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "0"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Gets the configuration settings for scripted inputs."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "disabled",
            "in": "formData",
            "description": "Specifies whether the input script is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Sets the host for events from this input. Defaults to whatever host sent the event.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Sets the index for events from this input. Defaults to the main index.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "interval",
            "in": "formData",
            "description": "Specify an integer or cron schedule. This parameter specifies how often to execute the specified script, in seconds or a valid cron schedule. If you specify a cron schedule, the script is not executed on start-up.",
            "required": true,
            "type": "number",
            "format": "double",
            "default": 60
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Specify the name of the scripted input.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "passAuth",
            "in": "formData",
            "description": "User to run the script as.\nIf you provide a username, Splunk Enterprise generates an auth token for that user and passes it to the script.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "rename-source",
            "in": "formData",
            "description": "Specify a new name for the source field for the script.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Sets the source key/field for events from this input. Defaults to the input file path.\nSets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.\n\nNote: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieived. Consider use of source types, tagging, and search wildcards before overriding this value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Sets the sourcetype key/field for events from this input. If unset, Splunk Enterprise picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.\nSets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.\n\nPrimarily used to explicitly declare the source type for this data, as opposed to allowing it to be determined using automated methods. This is typically important both for searchability and for applying the relevant configuration for this type of data during parsing and indexing.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Configures settings for new scripted inputs.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/script/restart": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "script",
            "in": "formData",
            "description": "Path to the script to be restarted. This path must match an already-configured existing scripted input.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Causes a restart on a given scripted input.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/script/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Returns the configuration settings for the scripted input specified by {name}."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Specifies whether the input script is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Sets the host for events from this input. Defaults to whatever host sent the event.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Sets the index for events from this input. Defaults to the main index.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "interval",
            "in": "formData",
            "description": "Specify an integer or cron schedule. This parameter specifies how often to execute the specified script, in seconds or a valid cron schedule. If you specify a cron schedule, the script is not executed on start-up.",
            "required": false,
            "type": "number",
            "format": "double",
            "default": 60
          },
          {
            "name": "passAuth",
            "in": "formData",
            "description": "User to run the script as.\nIf you provide a username, Splunk Enterprise generates an auth token for that user and passes it to the script.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "rename-source",
            "in": "formData",
            "description": "Specify a new name for the source field for the script.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Sets the source key/field for events from this input. Defaults to the input file path.\nSets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.\n\nNote: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieived. Consider use of source types, tagging, and search wildcards before overriding this value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Sets the sourcetype key/field for events from this input. If unset, Splunk Enterprise picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.\nSets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.\n\nPrimarily used to explicitly declare the source type for this data, as opposed to allowing it to be determined using automated methods. This is typically important both for searchability and for applying the relevant configuration for this type of data during parsing and indexing.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Configures settings for scripted input specified by {name}.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Removes the scripted input specified by {name}."
      }
    },
    "/services/data/inputs/tcp/cooked": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Returns information about all cooked TCP inputs."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "SSL",
            "in": "formData",
            "description": "If SSL is not already configured, error is returned",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "connection_host",
            "in": "formData",
            "description": "Valid values: (ip | dns | none)\nSet the host for the remote server that is sending data.\n\nip sets the host to the IP address of the remote server sending data.\n\ndns sets the host to the reverse DNS entry for the IP address of the remote server sending data.\n\nnone leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.\n\nDefault value is dns.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "dns"
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the input is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "The default value to fill in for events lacking a host value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The port number of this input.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "queue",
            "in": "formData",
            "description": "Specifies where the input processor should deposit the events it reads.\n\"parsingQueue\" | \"indexQueue\"",
            "required": false,
            "type": "string",
            "format": "",
            "default": "parsingQueue"
          },
          {
            "name": "restrictToHost",
            "in": "formData",
            "description": "Restrict incoming connections on this port to the host specified here.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Creates a new container for managing cooked data.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/tcp/cooked/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Returns information for the cooked TCP input specified by {name}. If port is restricted to a host, name should be URI-encoded host:port."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "SSL",
            "in": "formData",
            "description": "If SSL is not already configured, error is returned",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "connection_host",
            "in": "formData",
            "description": "Valid values: (ip | dns | none)\nSet the host for the remote server that is sending data.\n\nip sets the host to the IP address of the remote server sending data.\n\ndns sets the host to the reverse DNS entry for the IP address of the remote server sending data.\n\nnone leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.\n\nDefault value is ip.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "ip"
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the input is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "The default value to fill in for events lacking a host value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "restrictToHost",
            "in": "formData",
            "description": "Restrict incoming connections on this port to the host specified here.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Updates the container for managing cooked data.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Removes the cooked TCP inputs for port or host:port specified by {name}"
      }
    },
    "/services/data/inputs/tcp/cooked/{name}/connections": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Retrieves list of active connections to the named port."
      }
    },
    "/services/data/inputs/tcp/raw": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field used to sort",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Returns information about all raw TCP inputs."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "connection_host",
            "in": "formData",
            "description": "Valid values: (ip | dns | none)\nSet the host for the remote server that is sending data.\n\nip sets the host to the IP address of the remote server sending data.\n\ndns sets the host to the reverse DNS entry for the IP address of the remote server sending data.\n\nnone leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.\n\nDefault value is ip.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "dns"
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the inputs are disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Host from which the indexer gets data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Index to store generated events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The input port which receives raw data.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "queue",
            "in": "formData",
            "description": "Valid values: (parsingQueue | indexQueue)\nSpecifies where the input processor should deposit the events it reads. Defaults to parsingQueue.\n\nSet queue to parsingQueue to apply props.conf and other parsing rules to your data. For more information about props.conf and rules for timestamping and linebreaking, refer to props.conf and the online documentation at \"Monitor files and directories with inputs.conf\"\n\nSet queue to indexQueue to send your data directly into the index.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "rawTcpDoneTimeout",
            "in": "formData",
            "description": "Specifies in seconds the timeout value for adding a Done-key. Default value is 10 seconds.\nIf a connection over the port specified by name remains idle after receiving data for specified number of seconds, it adds a Done-key. This implies the last event is completely received.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "restrictToHost",
            "in": "formData",
            "description": "Allows for restricting this input to only accept data from the host specified here.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "SSL",
            "in": "formData",
            "description": "",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Sets the source key/field for events from this input. Defaults to the input file path.\nSets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.\n\nNote: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieved. Consider use of source types, tagging, and search wildcards before overriding this value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Set the source type for events from this input.\n\"sourcetype=\" is automatically prepended to <string>.\n\nDefaults to audittrail (if signedaudit=true) or fschange (if signedaudit=false).",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Creates a new data input for accepting raw TCP data.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/tcp/raw/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Returns information about raw TCP input port {name}. If port is restricted to a host, name should be URI-encoded host:port."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "host",
            "in": "header",
            "description": "Host from which the indexer gets data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "SSL",
            "in": "formData",
            "description": "",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "connection_host",
            "in": "formData",
            "description": "Valid values: (ip | dns | none)\nSet the host for the remote server that is sending data.\n\nip sets the host to the IP address of the remote server sending data.\n\ndns sets the host to the reverse DNS entry for the IP address of the remote server sending data.\n\nnone leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.\n\nDefault value is ip.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "dns"
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the inputs are disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Host from which the indexer gets data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Index to store generated events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "queue",
            "in": "formData",
            "description": "Valid values: (parsingQueue | indexQueue)\nSpecifies where the input processor should deposit the events it reads. Defaults to parsingQueue.\n\nSet queue to parsingQueue to apply props.conf and other parsing rules to your data. For more information about props.conf and rules for timestamping and linebreaking, refer to props.conf and the online documentation at \"Monitor files and directories with inputs.conf\"\n\nSet queue to indexQueue to send your data directly into the index.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "rawTcpDoneTimeout",
            "in": "formData",
            "description": "Specifies in seconds the timeout value for adding a Done-key. Default value is 10 seconds.\nIf a connection over the port specified by name remains idle after receiving data for specified number of seconds, it adds a Done-key. This implies the last event is completely received.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "restrictToHost",
            "in": "formData",
            "description": "Allows for restricting this input to only accept data from the host specified here.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Sets the source key/field for events from this input. Defaults to the input file path.\nSets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.\n\nNote: Overriding the source key is generally not recommended. Typically, the input layer provides a more accurate string to aid in problem analysis and investigation, accurately recording the file from which the data was retrieved. Consider use of source types, tagging, and search wildcards before overriding this value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Set the source type for events from this input.\n\"sourcetype=\" is automatically prepended to <string>.\n\nDefaults to audittrail (if signedaudit=true) or fschange (if signedaudit=false).",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Removes the raw inputs for port or host:port specified by {name}"
      }
    },
    "/services/data/inputs/tcp/raw/{name}/connections": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "View all connections to the named data input."
      }
    },
    "/services/data/inputs/tcp/splunktcptoken": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "string"
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Returns all configured tokens."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "Required. Name for the token to create.",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "token",
            "in": "formData",
            "description": "Optional. Token value to use. If unspecified, a token is generated automatically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Create a new token.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/tcp/splunktcptoken/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ]
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "string"
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "token",
            "in": "formData",
            "description": "New token value.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "string"
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ]
      }
    },
    "/services/data/inputs/tcp/ssl": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Returns SSL configuration. There is only one SSL configuration for all input ports."
      }
    },
    "/services/data/inputs/tcp/ssl/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Returns the SSL configuration for the host {name}."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates whether the inputs are disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Server certificate password, if any.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "requireClientCert",
            "in": "formData",
            "description": "Determines whether a client must authenticate.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "rootCA",
            "in": "formData",
            "description": "Certificate authority list (root file)",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "serverCert",
            "in": "formData",
            "description": "Full path to the server certificate.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Configures SSL attributes for the host {name}.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/udp": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name for sorting",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "List enabled and disabled UDP data inputs."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "connection_host",
            "in": "formData",
            "description": "Valid values: (ip | dns | none)\nSet the host for the remote server that is sending data.\n\nip sets the host to the IP address of the remote server sending data.\n\ndns sets the host to the reverse DNS entry for the IP address of the remote server sending data.\n\nnone leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.\n\nDefault value is ip.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "ip"
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates if the input is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "The value to populate in the host field for incoming events.\nThis is used during parsing/indexing, in particular to set the host field. It is also the host field used at search time.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Which index events from this input should be stored in.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The UDP port that this input should listen on.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "no_appending_timestamp",
            "in": "formData",
            "description": "If set to true, prevents Splunk Enterprise from prepending a timestamp and hostname to incoming events.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "no_priority_stripping",
            "in": "formData",
            "description": "If set to true, Splunk Enterprise does remove the priority field from incoming syslog events.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "queue",
            "in": "formData",
            "description": "Which queue events from this input should be sent to. Generally this does not need to be changed.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "restrictToHost",
            "in": "formData",
            "description": "Restrict incoming connections on this port to the host specified here.\nIf this is not set, the value specified in [udp://<remote server>:<port>] in inputs.conf is used.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "The value to populate in the source field for incoming events. The same source should not be used for multiple data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "The value to populate in the sourcetype field for incoming events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Create a new UDP data input.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/udp/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "List the properties of a single UDP data input port or host:port {name}. If port is restricted to a host, name should be URI-encoded host:port."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "connection_host",
            "in": "formData",
            "description": "Valid values: (ip | dns | none)\nSet the host for the remote server that is sending data.\n\nip sets the host to the IP address of the remote server sending data.\n\ndns sets the host to the reverse DNS entry for the IP address of the remote server sending data.\n\nnone leaves the host as specified in inputs.conf, which is typically the Splunk Enterprise system hostname.\n\nDefault value is ip.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "ip"
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Indicates if the input is disabled.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "host",
            "in": "formData",
            "description": "The value to populate in the host field for incoming events.\nThis is used during parsing/indexing, in particular to set the host field. It is also the host field used at search time.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Which index events from this input should be stored in.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "no_appending_timestamp",
            "in": "formData",
            "description": "If set to true, prevents Splunk Enterprise from prepending a timestamp and hostname to incoming events.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "no_priority_stripping",
            "in": "formData",
            "description": "If set to true, Splunk Enterprise does remove the priority field from incoming syslog events.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          },
          {
            "name": "queue",
            "in": "formData",
            "description": "Which queue events from this input should be sent to. Generally this does not need to be changed.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "restrictToHost",
            "in": "formData",
            "description": "Restrict incoming connections on this port to the host specified here.\nIf this is not set, the value specified in [udp://<remote server>:<port>] in inputs.conf is used.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "The value to populate in the source field for incoming events. The same source should not be used for multiple data inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "The value to populate in the sourcetype field for incoming events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Edit properties of the named UDP data input.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Disable the named UDP data input and remove it from the configuration."
      }
    },
    "/services/data/inputs/udp/{name}/connections": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Lists connections to the named UDP input."
      }
    },
    "/services/data/inputs/win-event-log-collections": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "lookup_host",
            "in": "query",
            "description": "For internal use. Used by the UI when editing the initial host from which we gather event log data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Retrieves a list of configured event log collections."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "hosts",
            "in": "formData",
            "description": "A comma-separated list of additional hosts to be used for monitoring. The first host should be specified with \"lookup_host\", and the additional ones using this parameter.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "logs",
            "in": "formData",
            "description": "List of event log names from which to gather data:\n WMI collection format (CSV) example:\nlogs=Application%2CSystem%2CSetup%2CSecurity\n Native event log collection format example:\nlogs=Application&logs=System&logs=Setup",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "lookup_host",
            "in": "formData",
            "description": "Host from which to monitor log events. To specify additional hosts to be monitored using WMI, use the \"hosts\" parameter.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Collection name. This name appears in configuration file, as well as the source and the sourcetype of the indexed data. If the value is \"localhost\", it uses native event log collection; otherwise, it uses WMI.",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates of modifies existing event log collection settings. You can configure both native and WMI collection with this endpoint."
      }
    },
    "/services/data/inputs/win-event-log-collections/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "lookup_host",
            "in": "query",
            "description": "For internal use. Used by the UI when editing the initial host from which we gather event log data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Gets the configuration settings for a given event log collection."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "hosts",
            "in": "formData",
            "description": "A comma-separated list of additional hosts to be used for monitoring. The first host should be specified with \"lookup_host\", and the additional ones using this parameter.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "logs",
            "in": "formData",
            "description": "A comma-separated list of event log names to gather data from.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "lookup_host",
            "in": "formData",
            "description": "This is a host from which we monitor log events. To specify additional hosts to be monitored using WMI, use the \"hosts\" parameter.",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Deletes a given event log collection."
      }
    },
    "/services/data/inputs/win-wmi-collections": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "0"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name use for sorting",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "/services/data/inputs/win-wmi-collections"
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "classes",
            "in": "formData",
            "description": "A valid WMI class name.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Disables the given collection.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "fields",
            "in": "formData",
            "description": "Properties (fields) that you want to gather from the given class.\nSpecify each property as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "1. *"
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "instances",
            "in": "formData",
            "description": "Instances of a given class for which data is gathered.\nSpecify each instance as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "empty"
          },
          {
            "name": "interval",
            "in": "formData",
            "description": "The interval, in seconds, at which the WMI provider(s) is queried.",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "lookup_host",
            "in": "formData",
            "description": "This is the server from which we is gathering WMI data. If you need to gather data from more than one machine, additional servers can be specified in the 'server' parameter.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "name",
            "in": "formData",
            "description": "This is the name of the collection. This name appears in configuration file, as well as the source and the sourcetype of the indexed data.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "server",
            "in": "formData",
            "description": "A comma-separated list of additional servers that you want to gather data from. Use this if you need to gather from more than a single machine. See also lookup_host.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "localhost"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/win-wmi-collections/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Gets information about a single collection."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "classes",
            "in": "formData",
            "description": "A valid WMI class name.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "disabled",
            "in": "formData",
            "description": "Disables the given collection.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "fields",
            "in": "formData",
            "description": "Properties (fields) that you want to gather from the given class.\nSpecify each property as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "instances",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "interval",
            "in": "formData",
            "description": "The interval, in seconds, at which the WMI provider(s) is queried.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "lookup_host",
            "in": "formData",
            "description": "This is the server from which we is gathering WMI data. If you need to gather data from more than one machine, additional servers can be specified in the 'server' parameter.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "server",
            "in": "formData",
            "description": "A comma-separated list of additional servers that you want to gather data from. Use this if you need to gather from more than a single machine. See also lookup_host parameter.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Modifies a given WMI collection.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "/services/data/inputs/win-wmi-collections/{name}"
      }
    },
    "/services/data/inputs/win-perfmon": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Gets current performance monitoring configuration."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "counters",
            "in": "formData",
            "description": "A set of counters to monitor. A '*' is equivalent to all counters.\nSpecify each counter as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Name of the host for the Windows Performance Monitor.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "Docs-W8R2-Std7"
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "instances",
            "in": "formData",
            "description": "A set of counter instances to monitor. A '*' is equivalent to all instances.\nSpecify each instance as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "interval",
            "in": "formData",
            "description": "How frequently, in seconds, to poll for new data.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "name",
            "in": "formData",
            "description": "This is the name of the collection. This name appears in configuration file, as well as the source and the sourcetype of the indexed data.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "object",
            "in": "formData",
            "description": "A valid performance monitor object (for example, 'Process,' 'Server,' 'PhysicalDisk.')",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Source for inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Source type of input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Creates new or modifies existing performance monitoring collection settings.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/data/inputs/win-perfmon/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Gets settings for a given perfmon stanza."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "counters",
            "in": "formData",
            "description": "A set of counters to monitor. A '*' is equivalent to all counters.\nSpecify each counter as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Name of the host for the Windows Performance Monitor.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "Docs-W8R2-Std7"
          },
          {
            "name": "index",
            "in": "formData",
            "description": "The index in which to store the gathered data.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "instances",
            "in": "formData",
            "description": "A set of counter instances to monitor. A '*' is equivalent to all instances.\nSpecify each instance as a separate argument to the POST operation.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "interval",
            "in": "formData",
            "description": "How frequently, in seconds, to poll for new data.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "object",
            "in": "formData",
            "description": "A valid performance monitor object (for example, 'Process,' 'Server,' 'PhysicalDisk.')",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "Source for inputs.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "Source type of input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Deletes a given monitoring stanza."
      }
    },
    "/services/data/modular-inputs": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of entries to return. Set value to -1 to get all available entries.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of first item to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "search",
            "in": "query",
            "description": "Response filter, where the response field values are matched against this search expression.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Response sort order:\nasc = ascending \ndesc = descending",
            "required": false,
            "type": "string",
            "format": "",
            "default": "asc"
          },
          {
            "name": "sort_key",
            "in": "query",
            "description": "Field name to use for sorting.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "name"
          },
          {
            "name": "sort_mode",
            "in": "query",
            "description": "Collated ordering:\nauto = If all field values are numeric, collate numerically. Otherwise, collate alphabetically. \nalpha = Collate alphabetically, not case-sensitive. \nalpha_case = Collate alphabetically, case-sensitive. \nnum = Collate numerically.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "auto"
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Response type:\ntrue = Summarized response, omitting some index details, providing a faster response. \nfalse = full response.",
            "required": false,
            "type": "boolean",
            "format": "",
            "default": false
          }
        ],
        "description": "Lists information about configured modular inputs."
      }
    },
    "/services/data/modular-inputs/{name}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Lists information about the modular input specified by {name}."
      }
    },
    "/services/indexing/preview": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [],
        "description": "Return a list of all data preview jobs. Data returned includes the Splunk Enterprise management URI to access each preview job."
      },
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "input.path",
            "in": "formData",
            "description": "The absolute file path to a local file that you want to preview data returned from indexing.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Create a preview data job for the specified source file, returning the preview data job ID.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/indexing/preview/{job_id}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "description": "Returns the props.conf settings for the data preview job specified by {job_id}."
      }
    },
    "/services/receivers/simple": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "host",
            "in": "query",
            "description": "The value to populate in the host field for events from this data input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_regex",
            "in": "query",
            "description": "A regular expression used to extract the host value from each event.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "query",
            "description": "The destination index where events are sent.",
            "required": false,
            "type": "string",
            "format": "",
            "default": "default"
          },
          {
            "name": "source",
            "in": "query",
            "description": "The source value to fill in the metadata for this input's events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "query",
            "description": "The sourcetype to apply to events from this input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Raw event text. This is the entirety of the HTTP request body.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Create events from the contents contained in the HTTP body.",
        "consumes": [
          "application/json",
          "application/xml"
        ]
      }
    },
    "/services/receivers/stream": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "host",
            "in": "query",
            "description": "The value to populate in the host field for events from this data input.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host_regex",
            "in": "query",
            "description": "A regular expression used to extract the host value from each event.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "query",
            "description": "The index to send events from this input to.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "query",
            "description": "The source value to fill in the metadata for this input's events.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "query",
            "description": "The sourcetype to apply to events from this input",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Raw event text. This does not need to be presented as a complete HTTP request, but can be streamed in as data is available.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Create events from the stream of data following HTTP headers.",
        "consumes": [
          "application/json",
          "application/xml"
        ]
      }
    },
    "/services/collector": {
      "post": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "in": "formData",
            "description": "Required if useAck is enabled. Pass in the channel GUID as a string parameter or using the \"x-splunk-request-channel\" header.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "event",
            "in": "formData",
            "description": "Required. Event payload key-value. Value can be a string or a JSON object.\nJSON example: {\"event\": {\"message\":\"Access log test message\"}}\nString example: \"event\": \"Access log test message.\"",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Host name. Specify with the host query string parameter. Sets a default for all events in the request. The default host name can be overridden.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "index",
            "in": "formData",
            "description": "Index name. Specify with the index query string parameter. Sets a default for all events in the request. The default index name can be overridden.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "source",
            "in": "formData",
            "description": "User-defined event source. Specify with the source query string parameter. Sets a default for all events in the request. The default source can be overridden.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "sourcetype",
            "in": "formData",
            "description": "User-defined event sourcetype. Specify with the sourcetype query string parameter. Sets a default for all events in the request. The default sourcetype can be overridden.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          },
          {
            "name": "time",
            "in": "formData",
            "description": "Epoch-formatted time. Specify with the time query string parameter. Sets a default for all events in the request. The default time can be overridden.",
            "required": false,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/services/collector/ack": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Required. Pass in the channel GUID as the channel string parameter or using the x-splunk-request-channel header.",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "name": "acks",
            "in": "query",
            "description": "Required. JSON object with an array of ack ID values. Include in the request payload.",
            "required": true,
            "type": "string",
            "format": "",
            "default": ""
          }
        ],
        "description": "Get HTTP Event Collector event indexing status."
      }
    }
  }
}